include:
  - template: Security/License-Management.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml

image: golang:1.11

stages:
  - prepare
  - test

.go-mod-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/.GOPATH
  before_script:
    - mkdir -p .GOPATH
  cache:
    paths:
      - .GOPATH/pkg/mod/

.base-job:
  only:
    refs:
      - merge_requests
      - master

.tests:
  extends:
    - .base-job
    - .go-mod-cache
  stage: test
  needs: ['download deps']
  script:
  - echo "Running all tests without daemonizing..."
  - make test
  - echo "Running just the acceptance tests daemonized (tmpdir)...."
  - TEST_DAEMONIZE=tmpdir make acceptance
  - echo "Running just the acceptance tests daemonized (inplace)...."
  - TEST_DAEMONIZE=inplace make acceptance
  artifacts:
    paths:
      - bin/gitlab-pages

license_management:
  stage: prepare
  variables:
    LICENSE_MANAGEMENT_SETUP_CMD: go mod vendor
  only:
    refs:
      - merge_requests
      - master
    changes:
      - go.{mod,sum}

sast:
  stage: prepare
  only:
    refs:
      - merge_requests
      - master

download deps:
  extends:
    - .base-job
    - .go-mod-cache
  stage: prepare
  script:
    - make deps-download
  artifacts:
    paths:
      - go.mod
      - go.sum

verify:
  extends:
    - .base-job
    - .go-mod-cache
  stage: test
  needs: ['download deps']
  script:
    - make setup
    - make generate-mocks
    - make verify
    - make cover
  artifacts:
    paths:
      - coverage.html

test:1.11:
  extends: .tests
  image: golang:1.11

test:1.12:
  extends: .tests
  image: golang:1.12

test:1.13:
  extends: .tests
  image: golang:1.13

race:
  extends: .go-mod-cache
  stage: test
  needs: ['download deps']
  script:
  - echo "Running race detector"
  - make race

check deps:
  extends:
    - .base-job
    - .go-mod-cache
  stage: test
  needs: ['download deps']
  script:
    - make deps-check

benchmark:
  extends:
    - .base-job
    - .go-mod-cache
  stage: test
  needs: ['download deps']
  script:
    - make setup
    - make benchstat
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - bench.*.txt
